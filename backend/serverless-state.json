{
  "service": {
    "service": "securevault-api",
    "serviceObject": {
      "name": "securevault-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "stage": "dev",
      "memorySize": 256,
      "timeout": 10,
      "httpApi": {
        "payload": "2.0"
      },
      "vpc": {
        "securityGroupIds": [
          "sg-073b235e71a80c9cc"
        ],
        "subnetIds": [
          "subnet-08ce220807b0947a6",
          "subnet-01492e08be7064cee",
          "subnet-08ccc3a97b15c9fe7",
          "subnet-03d19975461b33a41",
          "subnet-053081826548a8c32",
          "subnet-03028deec9392a4d0"
        ]
      },
      "environment": {
        "PORT": "8081",
        "DB_PORT": "5432",
        "DB_HOST": "user-securitydb.csx6yem6kqfu.us-east-1.rds.amazonaws.com",
        "DB_USER": "securityAdmin",
        "DB_PASS": "Re:Start#3",
        "DB_NAME": "user-securitydb",
        "JWT_SECRET": "b80da412b8d9794dd1e91a481873d6735acda8bc5277df94b2f3576ca91b4c332f1a1079b6817a7b7fa39eadf0ddd40a1304f11a7bb9d0722d07e82c1ec5a186",
        "ENCRYPTION_KEY": "88575dcdc169e6f2f42c2ddf8e9bbc7e53be8df331935b2b6a0102d9cc80eb33"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "ssm:*",
                "s3:*",
                "logs:*",
                "lambda:*",
                "iam:GetRole",
                "iam:PassRole"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/securevault-api-dev-app"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "securevault-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/securevault-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/securevault-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "securevault-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6fbe0658-43e3",
                "S3Key": "serverless/securevault-api/dev/1751625957568-2025-07-04T10:45:57.568Z/securevault-api.zip"
              },
              "Handler": "handler.server",
              "Runtime": "nodejs18.x",
              "FunctionName": "securevault-api-dev-app",
              "MemorySize": 256,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "PORT": "8081",
                  "DB_PORT": "5432",
                  "DB_HOST": "user-securitydb.csx6yem6kqfu.us-east-1.rds.amazonaws.com",
                  "DB_USER": "securityAdmin",
                  "DB_PASS": "Re:Start#3",
                  "DB_NAME": "user-securitydb",
                  "JWT_SECRET": "b80da412b8d9794dd1e91a481873d6735acda8bc5277df94b2f3576ca91b4c332f1a1079b6817a7b7fa39eadf0ddd40a1304f11a7bb9d0722d07e82c1ec5a186",
                  "ENCRYPTION_KEY": "88575dcdc169e6f2f42c2ddf8e9bbc7e53be8df331935b2b6a0102d9cc80eb33"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "AppLogGroup"
            ]
          },
          "AppLambdaVersionyZ2XMS0tSHnK7B5HkbdGaaAZig2ph1OrZjxXhvt6XLA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "JofcMKLgZNgVdcgW6y9CCbGJE2pZbbvCUaRAzdTPyk0="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-securevault-api",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "AppLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApp": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AppLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteAnyProxyVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "ANY /{proxy+}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApp"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApp"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-6fbe0658-43e3",
            "Export": {
              "Name": "sls-securevault-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersionyZ2XMS0tSHnK7B5HkbdGaaAZig2ph1OrZjxXhvt6XLA"
            },
            "Export": {
              "Name": "sls-securevault-api-dev-AppLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-securevault-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-securevault-api-dev-HttpApiUrl"
            }
          }
        }
      }
    },
    "plugins": [
      "serverless-dotenv-plugin",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "app": {
        "handler": "handler.server",
        "events": [
          {
            "httpApi": {
              "path": "/{proxy+}",
              "method": "*",
              "cors": {
                "allowedOrigins": [
                  "*"
                ],
                "allowedHeaders": [
                  "Content-Type"
                ],
                "allowedMethods": [
                  "GET",
                  "POST",
                  "OPTIONS"
                ]
              }
            },
            "resolvedMethod": "ANY",
            "resolvedPath": "/{proxy+}"
          }
        ],
        "name": "securevault-api-dev-app",
        "package": {},
        "memory": 256,
        "timeout": 10,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "AppLambdaVersionyZ2XMS0tSHnK7B5HkbdGaaAZig2ph1OrZjxXhvt6XLA"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "securevault-api",
      "frameworkVersion": "4",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "exclude": [
          ".gitignore",
          "README.md",
          "tests/**",
          ".vscode/**"
        ],
        "artifactsS3KeyDirname": "serverless/securevault-api/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-6fbe0658-43e3",
        "artifact": "C:\\Users\\USER\\Documents\\Bode oni wahala\\.serverless\\securevault-api.zip",
        "artifactDirectoryName": "serverless/securevault-api/dev/1751625957568-2025-07-04T10:45:57.568Z"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {},
    "artifact": "C:\\Users\\USER\\Documents\\Bode oni wahala\\.serverless\\securevault-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/securevault-api/dev/1751625957568-2025-07-04T10:45:57.568Z",
    "artifact": "securevault-api.zip"
  }
}